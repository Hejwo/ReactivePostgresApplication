buildscript {
	ext {
		springBootVersion = '2.1.0.RELEASE'
	}
	repositories {
		mavenCentral()
		maven { url 'https://repo.spring.io/snapshot' }
		maven { url 'https://repo.spring.io/milestone' }
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath('se.transmode.gradle:gradle-docker:1.2')
	}
}

apply plugin: 'java'
apply plugin: 'groovy'
apply plugin: 'docker'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'org.hejwo.r2dbc'
sourceCompatibility = '1.8'

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/snapshot' }
	maven { url 'https://repo.spring.io/milestone' }
	maven { url 'https://repo.spring.io/libs-milestone' }
}

springBoot {
	mainClassName = "org.hejwo.r2dbc.reactivepostgres.ReactivePostgresApplication"
}

configurations {
	integrationTestCompile.extendsFrom testCompile
	integrationTestRuntime.extendsFrom testRuntime
}

sourceSets {
	integrationTest {
		groovy {
			compileClasspath += main.output + test.output
			runtimeClasspath += main.output + test.output
			srcDir file('src/integrationTest/groovy')
		}
		resources.srcDir file('src/integrationTest/resources')
	}
}

dependencies {
	compile 'org.springframework.boot:spring-boot-starter-webflux'
	compileOnly 'org.projectlombok:lombok'

	compile 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.9.7'

	// Metrics
	compile 'org.springframework.boot:spring-boot-starter-actuator'
	compile 'io.micrometer:micrometer-registry-prometheus'
	compile 'io.prometheus:simpleclient_common:latest.release'

	// R2DBC
	compile group: 'org.springframework.data', name: 'spring-data-r2dbc', version: '1.0.0.M1'
	compile group: 'io.r2dbc', name: 'r2dbc-postgresql', version: '1.0.0.M6'
	
	// Database
	compile 'org.postgresql:postgresql:9.4.1209'
	compile 'ru.yandex.qatools.embed:postgresql-embedded:1.21'
	compile 'org.flywaydb:flyway-core:5.2.4'
}

dependencies {
	testCompile 'org.springframework.boot:spring-boot-starter-test'
	testCompile 'io.projectreactor:reactor-test'

	testCompile 'org.spockframework:spock-spring:1.1-groovy-2.4'
	testCompile 'org.spockframework:spock-core:1.1-groovy-2.4'
	testCompile 'org.codehaus.groovy:groovy:2.4.7'
}

test {
	beforeTest { descriptor ->
		logger.lifecycle("Test -> class: ${descriptor.className.padRight(65)}, name: '${descriptor.name}'")
	}
}

task integrationTest(type: Test) {
	group 'verification'

	classpath = sourceSets.integrationTest.runtimeClasspath
	testClassesDirs = sourceSets.integrationTest.output.classesDirs
}

integrationTest {
	beforeTest { descriptor ->
		logger.lifecycle("IntegrationTest -> class: ${descriptor.className.padRight(65)}, name: '${descriptor.name}'")
	}
}

check.dependsOn integrationTest
integrationTest.mustRunAfter test

task image(type: Docker, dependsOn: assemble) {
	group 'application'
	dependsOn 'build'

	push = false

	tag = "${projectDir.name}_${applicationName}".toLowerCase()
	dockerfile = file('docker/Dockerfile')
	doFirst {
		copy {
			from jar
			from 'docker'
			into stageDir
		}
	}
}

clean.dependsOn build
build.mustRunAfter clean